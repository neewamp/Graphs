DIGEST 60fc5c0847a588329211394230f06765
Fgraph_inst
R15:28 DirectedGraphs <> <> lib
R30:34 Coq.Strings.Ascii <> <> lib
R36:50 Coq.extraction.ExtrOcamlString <> <> lib
R68:72 Coq.MSets.MSets <> <> lib
R74:82 Coq.MSets.MSetFacts <> <> lib
R84:89 Coq.PArith.PArith <> <> lib
R111:124 DirectedGraphs DirectedGraphs <> mod
mod 100:106 <> myGraph
R147:153 Coq.MSets.MSetRBT <> <> lib
R173:178 Coq.ZArith.ZArith <> <> lib
R198:220 Coq.Structures.OrdersEx PositiveOrderedTypeBits <> modtype
mod 190:192 <> myGraph.pos
R247:258 Coq.MSets.MSetRBT Make <> modtype
R260:262 graph_inst myGraph.pos <> modtype
mod 235:242 <> myGraph.Vertices
def 278:281 myGraph node
R286:290 graph_inst myGraph.pos t defax
R310:324 Coq.Structures.OrdersEx PairOrderedType <> modtype
R326:328 graph_inst myGraph.pos <> modtype
R330:332 graph_inst myGraph.pos <> modtype
mod 302:305 <> myGraph.Edge
R353:364 Coq.MSets.MSetRBT Make <> modtype
R366:369 graph_inst myGraph.Edge <> modtype
mod 344:348 <> myGraph.Edges
R397:402 Coq.MSets.MSetFacts WFacts <> modtype
R405:412 graph_inst myGraph.Vertices <> modtype
mod 383:392 <> myGraph.vert_facts
R439:444 Coq.MSets.MSetFacts WFacts <> modtype
R447:451 graph_inst myGraph.Edges <> modtype
mod 425:434 <> myGraph.edge_facts
R477:487 Coq.MSets.MSetProperties WProperties <> modtype
R490:497 graph_inst myGraph.Vertices <> modtype
mod 464:472 <> myGraph.vert_prop
R523:533 Coq.MSets.MSetProperties WProperties <> modtype
R536:540 graph_inst myGraph.Edges <> modtype
mod 510:518 <> myGraph.edge_prop
def 558:561 myGraph edge
R566:574 graph_inst myGraph.Edges elt def
def 590:594 myGraph v_set
R599:608 graph_inst myGraph.Vertices t def
def 624:628 myGraph e_set
R633:639 graph_inst myGraph.Edges t def
def 658:659 myGraph ok
R667:671 graph_inst myGraph v_set def
R679:683 graph_inst myGraph e_set def
R712:715 graph_inst myGraph edge def
R731:757 Coq.Init.Logic <> :type_scope:x_'->'_x not
R758:758 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R780:785 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R807:807 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R759:769 graph_inst myGraph.Vertices In def
R779:779 graph_inst <> V var
R772:774 Coq.Init.Datatypes <> fst def
R776:776 graph_inst <> e var
R786:796 graph_inst myGraph.Vertices In def
R806:806 graph_inst <> V var
R799:801 Coq.Init.Datatypes <> snd def
R803:803 graph_inst <> e var
R719:726 graph_inst myGraph.Edges In def
R730:730 graph_inst <> E var
R728:728 graph_inst <> e var
constr 834:840 myGraph mkgraph
rec 821:825 myGraph Graph
proj 852:864 myGraph graphVertices
proj 883:892 myGraph graphEdges
proj 911:917 myGraph graphOk
R867:871 graph_inst myGraph v_set def
R896:900 graph_inst myGraph e_set def
R921:922 graph_inst myGraph ok def
R938:947 graph_inst <> graphEdges meth
R924:936 graph_inst <> graphVertices meth
syndef 972:977 myGraph vertex
R982:993 graph_inst myGraph.Vertices elt def
def 1012:1020 myGraph buildEdge
R1030:1035 graph_inst myGraph vertex syndef
R1039:1047 graph_inst myGraph.Edges elt def
R1056:1056 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1058:1058 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1061:1061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1057:1057 graph_inst <> n var
R1059:1060 graph_inst <> n1 var
def 1078:1078 myGraph t
R1083:1087 graph_inst myGraph Graph rec
def 1142:1146 myGraph empty
R1151:1157 graph_inst myGraph mkgraph constr
R1174:1184 graph_inst myGraph.Edges empty def
R1159:1172 graph_inst myGraph.Vertices empty def
R1219:1220 graph_inst myGraph ok def
def 1275:1283 myGraph buildPair
R1293:1296 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1303:1306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1313:1315 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R1307:1312 graph_inst myGraph vertex syndef
R1316:1321 graph_inst myGraph vertex syndef
R1297:1302 graph_inst myGraph vertex syndef
R1287:1292 graph_inst myGraph vertex syndef
R1341:1341 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1343:1343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1345:1345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1342:1342 graph_inst <> x var
R1344:1344 graph_inst <> y var
def 1362:1373 myGraph destructEdge
R1383:1387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1403:1403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1394:1396 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R1388:1393 graph_inst myGraph vertex syndef
R1397:1402 graph_inst myGraph vertex syndef
R1377:1382 graph_inst myGraph.Edge t defax
R1420:1425 graph_inst myGraph.Edge t defax
R1445:1445 graph_inst <> X var
R1450:1450 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1452:1453 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1456:1456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R1451:1451 graph_inst <> p var
R1454:1455 graph_inst <> p0 var
def 1473:1480 myGraph isemptyP
R1489:1492 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1498:1501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1493:1497 graph_inst myGraph e_set def
R1484:1488 graph_inst myGraph v_set def
R1523:1527 graph_inst myGraph v_set def
R1535:1539 graph_inst myGraph e_set def
R1561:1565 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1545:1558 graph_inst myGraph.Vertices Empty def
R1560:1560 graph_inst <> x var
R1566:1576 graph_inst myGraph.Edges Empty def
R1578:1578 graph_inst <> y var
def 1596:1602 myGraph IsEmpty
R1611:1614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1606:1610 graph_inst myGraph Graph rec
R1635:1639 graph_inst myGraph Graph rec
R1682:1685 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R1650:1663 graph_inst myGraph.Vertices Empty def
R1666:1678 graph_inst myGraph graphVertices proj
R1680:1680 graph_inst <> G var
R1686:1696 graph_inst myGraph.Edges Empty def
R1699:1708 graph_inst myGraph graphEdges proj
R1710:1710 graph_inst <> G var
def 1728:1735 myGraph IsVertex
R1751:1754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1760:1763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1755:1759 graph_inst myGraph Graph rec
R1739:1750 graph_inst myGraph.Vertices elt def
R1785:1796 graph_inst myGraph.Vertices elt def
R1804:1808 graph_inst myGraph Graph rec
R1821:1831 graph_inst myGraph.Vertices In def
R1836:1848 graph_inst myGraph graphVertices proj
R1850:1850 graph_inst <> G var
R1833:1833 graph_inst <> n var
def 1868:1873 myGraph IsEdge
R1886:1889 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1895:1898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1890:1894 graph_inst myGraph Graph rec
R1877:1885 graph_inst myGraph.Edges elt def
R1920:1928 graph_inst myGraph.Edges elt def
R1936:1940 graph_inst myGraph Graph rec
R1953:1960 graph_inst myGraph.Edges In def
R1965:1974 graph_inst myGraph graphEdges proj
R1976:1976 graph_inst <> G var
R1962:1962 graph_inst <> e var
def 1994:2000 myGraph isEmpty
R2009:2012 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2013:2016 Coq.Init.Datatypes <> bool ind
R2004:2008 graph_inst myGraph Graph rec
R2034:2038 graph_inst myGraph Graph rec
R2044:2047 Coq.Init.Datatypes <> andb def
R2116:2129 graph_inst myGraph.Edges is_empty def
R2132:2141 graph_inst myGraph graphEdges proj
R2143:2143 graph_inst <> G var
R2050:2066 graph_inst myGraph.Vertices is_empty def
R2069:2081 graph_inst myGraph graphVertices proj
R2083:2083 graph_inst <> G var
def 2162:2169 myGraph isVertex
R2185:2188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2194:2197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2198:2201 Coq.Init.Datatypes <> bool ind
R2189:2193 graph_inst myGraph Graph rec
R2173:2184 graph_inst myGraph.Vertices elt def
R2219:2230 graph_inst myGraph.Vertices elt def
R2238:2242 graph_inst myGraph Graph rec
R2255:2266 graph_inst myGraph.Vertices mem def
R2271:2283 graph_inst myGraph graphVertices proj
R2285:2285 graph_inst <> G var
R2268:2268 graph_inst <> v var
def 2303:2308 myGraph isEdge
R2321:2324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2330:2333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2334:2337 Coq.Init.Datatypes <> bool ind
R2325:2329 graph_inst myGraph Graph rec
R2312:2320 graph_inst myGraph.Edges elt def
R2355:2363 graph_inst myGraph.Edges elt def
R2371:2375 graph_inst myGraph Graph rec
R2387:2395 graph_inst myGraph.Edges mem def
R2400:2409 graph_inst myGraph graphEdges proj
R2411:2411 graph_inst <> G var
R2397:2397 graph_inst <> e var
prf 2424:2438 myGraph IsEmpty_reflect
R2457:2461 graph_inst myGraph Graph rec
R2464:2470 Coq.Bool.Bool <> reflect ind
R2485:2491 graph_inst myGraph isEmpty def
R2493:2493 graph_inst <> G var
R2473:2479 graph_inst myGraph IsEmpty def
R2481:2481 graph_inst <> G var
R2529:2535 graph_inst myGraph IsEmpty def
R2549:2555 graph_inst myGraph isEmpty def
R2584:2594 Coq.Bool.Bool <> iff_reflect thm
R2584:2594 Coq.Bool.Bool <> iff_reflect thm
R2612:2633 graph_inst myGraph.Vertices is_empty_spec thm
R2612:2633 graph_inst myGraph.Vertices is_empty_spec thm
R2612:2633 graph_inst myGraph.Vertices is_empty_spec thm
R2651:2669 graph_inst myGraph.Edges is_empty_spec thm
R2651:2669 graph_inst myGraph.Edges is_empty_spec thm
R2651:2669 graph_inst myGraph.Edges is_empty_spec thm
R2701:2713 Coq.Bool.Bool <> andb_true_iff thm
R2701:2713 Coq.Bool.Bool <> andb_true_iff thm
R2701:2713 Coq.Bool.Bool <> andb_true_iff thm
prf 2738:2753 myGraph IsVertex_reflect
R2773:2777 graph_inst myGraph Graph rec
R2785:2788 graph_inst myGraph node def
R2798:2804 Coq.Bool.Bool <> reflect ind
R2822:2829 graph_inst myGraph isVertex def
R2833:2833 graph_inst <> G var
R2831:2831 graph_inst <> v var
R2807:2814 graph_inst myGraph IsVertex def
R2818:2818 graph_inst <> G var
R2816:2816 graph_inst <> v var
R2895:2905 Coq.Bool.Bool <> iff_reflect thm
R2895:2905 Coq.Bool.Bool <> iff_reflect thm
R2937:2953 graph_inst myGraph.Vertices mem_spec thm
R2937:2953 graph_inst myGraph.Vertices mem_spec thm
R2937:2953 graph_inst myGraph.Vertices mem_spec thm
prf 2978:2991 myGraph IsEdge_reflect
R3011:3015 graph_inst myGraph Graph rec
R3023:3031 graph_inst myGraph.Edges elt def
R3035:3041 Coq.Bool.Bool <> reflect ind
R3057:3062 graph_inst myGraph isEdge def
R3066:3066 graph_inst <> G var
R3064:3064 graph_inst <> e var
R3044:3049 graph_inst myGraph IsEdge def
R3053:3053 graph_inst <> G var
R3051:3051 graph_inst <> e var
R3117:3127 Coq.Bool.Bool <> iff_reflect thm
R3117:3127 Coq.Bool.Bool <> iff_reflect thm
R3141:3146 graph_inst myGraph IsEdge def
R3149:3154 graph_inst myGraph isEdge def
R3178:3191 graph_inst myGraph.Edges mem_spec thm
R3178:3191 graph_inst myGraph.Edges mem_spec thm
R3178:3191 graph_inst myGraph.Edges mem_spec thm
def 3223:3234 myGraph enumVertices
R3243:3246 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3247:3256 graph_inst myGraph.Vertices t def
R3238:3242 graph_inst myGraph Graph rec
R3274:3278 graph_inst myGraph Graph rec
R3284:3296 graph_inst myGraph graphVertices proj
R3298:3298 graph_inst <> g var
def 3317:3325 myGraph enumEdges
R3334:3337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3338:3344 graph_inst myGraph.Edges t def
R3329:3333 graph_inst myGraph Graph rec
R3362:3366 graph_inst myGraph Graph rec
R3373:3382 graph_inst myGraph graphEdges proj
R3384:3384 graph_inst <> G var
prf 3397:3401 myGraph Empty
R3405:3411 graph_inst myGraph IsEmpty def
R3413:3417 graph_inst myGraph empty def
R3440:3444 graph_inst myGraph empty def
R3458:3464 graph_inst myGraph IsEmpty def
R3488:3506 graph_inst myGraph.Vertices empty_spec thm
R3488:3506 graph_inst myGraph.Vertices empty_spec thm
R3519:3534 graph_inst myGraph.Edges empty_spec thm
R3519:3534 graph_inst myGraph.Edges empty_spec thm
prf 3555:3568 myGraph Empty_vertices
R3587:3591 graph_inst myGraph Graph rec
R3603:3606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3607:3620 graph_inst myGraph.Vertices Empty def
R3623:3634 graph_inst myGraph enumVertices def
R3636:3636 graph_inst <> G var
R3594:3600 graph_inst myGraph IsEmpty def
R3602:3602 graph_inst <> G var
prf 3737:3747 myGraph Empty_edges
R3766:3766 graph_inst myGraph t def
R3778:3781 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3782:3792 graph_inst myGraph.Edges Empty def
R3795:3803 graph_inst myGraph enumEdges def
R3805:3805 graph_inst <> G var
R3769:3775 graph_inst myGraph IsEmpty def
R3777:3777 graph_inst <> G var
prf 3888:3899 myGraph IsVertexEnum
R3919:3919 graph_inst myGraph t def
R3927:3938 graph_inst myGraph.Vertices elt def
R3960:3964 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3948:3955 graph_inst myGraph IsVertex def
R3959:3959 graph_inst <> G var
R3957:3957 graph_inst <> v var
R3965:3975 graph_inst myGraph.Vertices In def
R3980:3991 graph_inst myGraph enumVertices def
R3993:3993 graph_inst <> G var
R3977:3977 graph_inst <> v var
prf 4070:4079 myGraph IsEdgeEnum
R4099:4099 graph_inst myGraph t def
R4107:4115 graph_inst myGraph.Edges elt def
R4129:4133 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4119:4124 graph_inst myGraph IsEdge def
R4128:4128 graph_inst <> G var
R4126:4126 graph_inst <> e var
R4134:4141 graph_inst myGraph.Edges In def
R4146:4154 graph_inst myGraph enumEdges def
R4156:4156 graph_inst <> G var
R4143:4143 graph_inst <> e var
prf 4233:4244 myGraph Edge_exists1
R4264:4264 graph_inst myGraph t def
R4272:4280 graph_inst myGraph.Edges elt def
R4300:4303 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4304:4311 graph_inst myGraph IsVertex def
R4336:4336 graph_inst <> G var
R4314:4316 Coq.Init.Datatypes <> fst def
R4319:4330 graph_inst myGraph destructEdge def
R4332:4332 graph_inst <> e var
R4290:4295 graph_inst myGraph IsEdge def
R4299:4299 graph_inst <> G var
R4297:4297 graph_inst <> e var
R4377:4388 graph_inst myGraph destructEdge def
R4418:4425 graph_inst myGraph IsVertex def
R4439:4444 graph_inst myGraph IsEdge def
prf 4552:4563 myGraph Edge_exists2
R4593:4596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4597:4604 graph_inst myGraph IsVertex def
R4629:4629 graph_inst <> G var
R4607:4609 Coq.Init.Datatypes <> snd def
R4612:4623 graph_inst myGraph destructEdge def
R4625:4625 graph_inst <> e var
R4583:4588 graph_inst myGraph IsEdge def
R4592:4592 graph_inst <> G var
R4590:4590 graph_inst <> e var
R4664:4675 graph_inst myGraph destructEdge def
R4678:4685 graph_inst myGraph IsVertex def
R4688:4693 graph_inst myGraph IsEdge def
def 4829:4837 myGraph addVertex
R4845:4850 graph_inst myGraph vertex syndef
R4858:4858 graph_inst myGraph t def
R4863:4863 graph_inst myGraph t def
R4872:4878 graph_inst myGraph mkgraph constr
R4916:4925 graph_inst myGraph graphEdges proj
R4927:4927 graph_inst <> G var
R4881:4892 graph_inst myGraph.Vertices add def
R4897:4909 graph_inst myGraph graphVertices proj
R4911:4911 graph_inst <> G var
R4894:4894 graph_inst <> v var
R4979:4980 graph_inst myGraph ok def
R5065:5081 graph_inst myGraph.Vertices add_spec thm
R5065:5081 graph_inst myGraph.Vertices add_spec thm
R5065:5081 graph_inst myGraph.Vertices add_spec thm
prf 5135:5140 myGraph add_ok
R5199:5208 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5246:5255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5256:5257 graph_inst myGraph ok def
R5278:5286 graph_inst myGraph.Edges add def
R5291:5300 graph_inst myGraph graphEdges proj
R5302:5302 graph_inst <> G var
R5288:5288 graph_inst <> e var
R5260:5272 graph_inst myGraph graphVertices proj
R5274:5274 graph_inst <> G var
R5209:5219 graph_inst myGraph.Vertices In def
R5230:5242 graph_inst myGraph graphVertices proj
R5244:5244 graph_inst <> G var
R5222:5224 Coq.Init.Datatypes <> snd def
R5226:5226 graph_inst <> e var
R5162:5172 graph_inst myGraph.Vertices In def
R5183:5195 graph_inst myGraph graphVertices proj
R5197:5197 graph_inst <> G var
R5175:5177 Coq.Init.Datatypes <> fst def
R5179:5179 graph_inst <> e var
R5327:5328 graph_inst myGraph ok def
R5349:5362 graph_inst myGraph.Edges add_spec thm
R5349:5362 graph_inst myGraph.Edges add_spec thm
prf 5605:5620 myGraph Vertices_in_dec1
R5642:5642 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5636:5641 graph_inst myGraph vertex syndef
R5643:5648 graph_inst myGraph vertex syndef
R5660:5660 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5698:5708 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5748:5748 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R5661:5671 graph_inst myGraph.Vertices In def
R5682:5694 graph_inst myGraph graphVertices proj
R5696:5696 graph_inst <> G var
R5674:5676 Coq.Init.Datatypes <> fst def
R5678:5678 graph_inst <> e var
R5709:5710 Coq.Init.Logic <> :type_scope:'~'_x not
R5711:5721 graph_inst myGraph.Vertices In def
R5732:5744 graph_inst myGraph graphVertices proj
R5746:5746 graph_inst <> G var
R5724:5726 Coq.Init.Datatypes <> fst def
R5728:5728 graph_inst <> e var
R5785:5796 graph_inst myGraph.Vertices mem def
R5807:5819 graph_inst myGraph graphVertices proj
R5799:5801 Coq.Init.Datatypes <> fst def
R5785:5796 graph_inst myGraph.Vertices mem def
R5807:5819 graph_inst myGraph graphVertices proj
R5799:5801 Coq.Init.Datatypes <> fst def
R5854:5870 graph_inst myGraph.Vertices mem_spec thm
R5854:5870 graph_inst myGraph.Vertices mem_spec thm
R5854:5870 graph_inst myGraph.Vertices mem_spec thm
R5923:5939 graph_inst myGraph.Vertices mem_spec thm
R5923:5939 graph_inst myGraph.Vertices mem_spec thm
R5923:5939 graph_inst myGraph.Vertices mem_spec thm
prf 5999:6014 myGraph Vertices_in_dec2
R6036:6036 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6030:6035 graph_inst myGraph vertex syndef
R6037:6042 graph_inst myGraph vertex syndef
R6054:6054 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6092:6102 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6142:6142 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6055:6065 graph_inst myGraph.Vertices In def
R6076:6088 graph_inst myGraph graphVertices proj
R6090:6090 graph_inst <> G var
R6068:6070 Coq.Init.Datatypes <> snd def
R6072:6072 graph_inst <> e var
R6103:6104 Coq.Init.Logic <> :type_scope:'~'_x not
R6105:6115 graph_inst myGraph.Vertices In def
R6126:6138 graph_inst myGraph graphVertices proj
R6140:6140 graph_inst <> G var
R6118:6120 Coq.Init.Datatypes <> snd def
R6122:6122 graph_inst <> e var
R6179:6190 graph_inst myGraph.Vertices mem def
R6201:6213 graph_inst myGraph graphVertices proj
R6193:6195 Coq.Init.Datatypes <> snd def
R6179:6190 graph_inst myGraph.Vertices mem def
R6201:6213 graph_inst myGraph graphVertices proj
R6193:6195 Coq.Init.Datatypes <> snd def
R6248:6264 graph_inst myGraph.Vertices mem_spec thm
R6248:6264 graph_inst myGraph.Vertices mem_spec thm
R6248:6264 graph_inst myGraph.Vertices mem_spec thm
R6317:6333 graph_inst myGraph.Vertices mem_spec thm
R6317:6333 graph_inst myGraph.Vertices mem_spec thm
R6317:6333 graph_inst myGraph.Vertices mem_spec thm
prf 6393:6407 myGraph Vertices_in_dec
R6434:6434 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6428:6433 graph_inst myGraph vertex syndef
R6435:6440 graph_inst myGraph vertex syndef
R6452:6452 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6538:6548 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6641:6641 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6490:6500 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6453:6463 graph_inst myGraph.Vertices In def
R6474:6486 graph_inst myGraph graphVertices proj
R6488:6488 graph_inst <> G var
R6466:6468 Coq.Init.Datatypes <> fst def
R6470:6470 graph_inst <> e var
R6501:6511 graph_inst myGraph.Vertices In def
R6522:6534 graph_inst myGraph graphVertices proj
R6536:6536 graph_inst <> G var
R6514:6516 Coq.Init.Datatypes <> snd def
R6518:6518 graph_inst <> e var
R6549:6551 Coq.Init.Logic <> :type_scope:'~'_x not
R6640:6640 Coq.Init.Logic <> :type_scope:'~'_x not
R6589:6602 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6552:6562 graph_inst myGraph.Vertices In def
R6573:6585 graph_inst myGraph graphVertices proj
R6587:6587 graph_inst <> G var
R6565:6567 Coq.Init.Datatypes <> fst def
R6569:6569 graph_inst <> e var
R6603:6613 graph_inst myGraph.Vertices In def
R6624:6636 graph_inst myGraph graphVertices proj
R6638:6638 graph_inst <> G var
R6616:6618 Coq.Init.Datatypes <> snd def
R6620:6620 graph_inst <> e var
R6679:6694 graph_inst myGraph Vertices_in_dec1 thm
R6718:6733 graph_inst myGraph Vertices_in_dec2 thm
R6679:6694 graph_inst myGraph Vertices_in_dec1 thm
R6718:6733 graph_inst myGraph Vertices_in_dec2 thm
R6718:6733 graph_inst myGraph Vertices_in_dec2 thm
def 6850:6856 myGraph addEdge
R6863:6866 graph_inst myGraph edge def
R6874:6874 graph_inst myGraph t def
R6879:6879 graph_inst myGraph t def
R6892:6906 graph_inst myGraph Vertices_in_dec thm
R6910:6910 graph_inst <> G var
R6908:6908 graph_inst <> e var
R7022:7022 graph_inst <> G var
R6922:6928 graph_inst myGraph mkgraph constr
R6966:6974 graph_inst myGraph.Edges add def
R6979:6988 graph_inst myGraph graphEdges proj
R6990:6990 graph_inst <> G var
R6976:6976 graph_inst <> e var
R6931:6943 graph_inst myGraph graphVertices proj
R6945:6945 graph_inst <> G var
R7063:7068 graph_inst myGraph add_ok thm
R7063:7068 graph_inst myGraph add_ok thm
prf 7097:7110 myGraph annoyingProper
R7130:7135 Coq.Classes.Morphisms <> Proper class
R7176:7184 graph_inst myGraph.Edges elt def
R7206:7209 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7189:7192 Coq.Init.Datatypes <> negb def
R7200:7203 Coq.PArith.BinPos <> :positive_scope:x_'=?'_x not
R7195:7197 Coq.Init.Datatypes <> fst def
R7199:7199 graph_inst <> x var
R7204:7204 graph_inst <> v var
R7210:7213 Coq.Init.Datatypes <> negb def
R7221:7224 Coq.PArith.BinPos <> :positive_scope:x_'=?'_x not
R7216:7218 Coq.Init.Datatypes <> snd def
R7220:7220 graph_inst <> x var
R7225:7225 graph_inst <> v var
R7145:7149 Coq.Classes.Morphisms ProperNotations :signature_scope:x_'==>'_x not
R7140:7142 Coq.Classes.RelationPairs <> :signature_scope:x_'*'_x not
R7138:7139 Coq.Init.Logic <> eq ind
R7143:7144 Coq.Init.Logic <> eq ind
R7150:7151 Coq.Init.Logic <> eq ind
R7250:7255 Coq.Classes.Morphisms <> Proper class
R7269:7278 Coq.Classes.Morphisms <> respectful def
R7380:7390 graph_inst myGraph.Vertices eq def
not 7364:7364 myGraph ::x_'=V='_x
R7441:7442 Coq.Init.Logic <> :type_scope:'~'_x not
R7443:7453 graph_inst myGraph.Vertices eq def
not 7425:7425 myGraph ::x_'<V>'_x
R7505:7512 graph_inst myGraph.Edges eq def
not 7489:7489 myGraph ::x_'=E='_x
R7563:7564 Coq.Init.Logic <> :type_scope:'~'_x not
R7565:7572 graph_inst myGraph.Edges eq def
not 7547:7547 myGraph ::x_'<E>'_x
R7624:7636 graph_inst myGraph.Vertices.E eq defax
not 7608:7608 myGraph ::x_'=v='_x
R7687:7688 Coq.Init.Logic <> :type_scope:'~'_x not
R7689:7701 graph_inst myGraph.Vertices.E eq defax
not 7671:7671 myGraph ::x_'<v>'_x
R7753:7762 graph_inst myGraph.Edges.E eq defax
not 7737:7737 myGraph ::x_'=e='_x
R7813:7814 Coq.Init.Logic <> :type_scope:'~'_x not
R7815:7824 graph_inst myGraph.Edges.E eq defax
not 7797:7797 myGraph ::x_'<e>'_x
def 7872:7883 myGraph removeVertex
R7891:7896 graph_inst myGraph vertex syndef
R7904:7904 graph_inst myGraph t def
R7909:7909 graph_inst myGraph t def
R7930:7941 graph_inst myGraph.Edges filter def
R8012:8021 graph_inst myGraph graphEdges proj
R8023:8023 graph_inst <> G var
R7953:7953 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7978:7983 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7954:7957 Coq.Init.Datatypes <> negb def
R7960:7966 Coq.PArith.BinPos Pos eqb def
R7976:7976 graph_inst <> v var
R7969:7971 Coq.Init.Datatypes <> fst def
R7973:7973 graph_inst <> x var
R7984:7987 Coq.Init.Datatypes <> negb def
R7990:7996 Coq.PArith.BinPos Pos eqb def
R8007:8007 graph_inst <> v var
R7999:8001 Coq.Init.Datatypes <> snd def
R8003:8003 graph_inst <> x var
R8033:8039 graph_inst myGraph mkgraph constr
R8080:8083 graph_inst <> newE var
R8042:8056 graph_inst myGraph.Vertices remove def
R8061:8073 graph_inst myGraph graphVertices proj
R8075:8075 graph_inst <> G var
R8058:8058 graph_inst <> v var
R8167:8168 graph_inst myGraph ok def
R8193:8209 graph_inst myGraph.Edges filter_spec thm
R8193:8209 graph_inst myGraph.Edges filter_spec thm
R8243:8255 Coq.Bool.Bool <> andb_true_iff thm
R8243:8255 Coq.Bool.Bool <> andb_true_iff thm
R8293:8305 Coq.Bool.Bool <> negb_true_iff thm
R8293:8305 Coq.Bool.Bool <> negb_true_iff thm
R8293:8305 Coq.Bool.Bool <> negb_true_iff thm
R8329:8339 Coq.PArith.BinPos Pos eqb_neq thm
R8329:8339 Coq.PArith.BinPos Pos eqb_neq thm
R8329:8339 Coq.PArith.BinPos Pos eqb_neq thm
R8374:8397 graph_inst myGraph.vert_prop.Dec.F remove_2 thm
R8374:8397 graph_inst myGraph.vert_prop.Dec.F remove_2 thm
R8374:8397 graph_inst myGraph.vert_prop.Dec.F remove_2 thm
R8460:8473 graph_inst myGraph annoyingProper thm
R8460:8473 graph_inst myGraph annoyingProper thm
def 8509:8518 myGraph removeEdge
R8526:8529 graph_inst myGraph edge def
R8537:8537 graph_inst myGraph t def
R8542:8542 graph_inst myGraph t def
R8551:8557 graph_inst myGraph mkgraph constr
R8578:8589 graph_inst myGraph.Edges remove def
R8594:8603 graph_inst myGraph graphEdges proj
R8605:8605 graph_inst <> G var
R8591:8591 graph_inst <> e var
R8560:8572 graph_inst myGraph graphVertices proj
R8574:8574 graph_inst <> G var
R8710:8726 graph_inst myGraph.Edges remove_spec thm
R8710:8726 graph_inst myGraph.Edges remove_spec thm
prf 8767:8781 myGraph addVertex_spec1
R8801:8808 graph_inst myGraph IsVertex def
R8813:8821 graph_inst myGraph addVertex def
R8825:8825 graph_inst <> G var
R8823:8823 graph_inst <> v var
R8810:8810 graph_inst <> v var
R8872:8879 graph_inst myGraph IsVertex def
R8903:8919 graph_inst myGraph.Vertices add_spec thm
R8903:8919 graph_inst myGraph.Vertices add_spec thm
prf 8948:8962 myGraph addVertex_spec2
R9007:9030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9044:9048 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9031:9038 graph_inst myGraph IsVertex def
R9043:9043 graph_inst <> G var
R9040:9041 graph_inst <> v1 var
R9049:9056 graph_inst myGraph IsVertex def
R9062:9070 graph_inst myGraph addVertex def
R9075:9075 graph_inst <> G var
R9072:9073 graph_inst <> v2 var
R9058:9059 graph_inst <> v1 var
R8986:8987 Coq.Init.Logic <> :type_scope:'~'_x not
R8988:9000 graph_inst myGraph.Vertices.E eq defax
R9005:9006 graph_inst <> v2 var
R9002:9003 graph_inst <> v1 var
R9129:9136 graph_inst myGraph IsVertex def
R9161:9163 Coq.Init.Logic <> not def
R9206:9222 graph_inst myGraph.Vertices add_spec thm
R9206:9222 graph_inst myGraph.Vertices add_spec thm
R9245:9261 graph_inst myGraph.Vertices add_spec thm
R9245:9261 graph_inst myGraph.Vertices add_spec thm
prf 9345:9359 myGraph addVertex_spec3
R9397:9401 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9387:9392 graph_inst myGraph IsEdge def
R9396:9396 graph_inst <> G var
R9394:9394 graph_inst <> e var
R9402:9407 graph_inst myGraph IsEdge def
R9412:9420 graph_inst myGraph addVertex def
R9424:9424 graph_inst <> G var
R9422:9422 graph_inst <> v var
R9409:9409 graph_inst <> e var
R9473:9478 graph_inst myGraph IsEdge def
prf 9535:9547 myGraph addEdge_spec1
R9606:9614 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9648:9656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9657:9662 graph_inst myGraph IsEdge def
R9667:9673 graph_inst myGraph addEdge def
R9677:9677 graph_inst <> G var
R9675:9675 graph_inst <> e var
R9664:9664 graph_inst <> e var
R9615:9622 graph_inst myGraph IsVertex def
R9647:9647 graph_inst <> G var
R9625:9627 Coq.Init.Datatypes <> snd def
R9630:9641 graph_inst myGraph destructEdge def
R9643:9643 graph_inst <> e var
R9573:9580 graph_inst myGraph IsVertex def
R9605:9605 graph_inst <> G var
R9583:9585 Coq.Init.Datatypes <> fst def
R9588:9599 graph_inst myGraph destructEdge def
R9601:9601 graph_inst <> e var
R9713:9719 graph_inst myGraph addEdge def
R9744:9758 graph_inst myGraph Vertices_in_dec thm
R9744:9758 graph_inst myGraph Vertices_in_dec thm
R9777:9782 graph_inst myGraph IsEdge def
R9806:9819 graph_inst myGraph.Edges add_spec thm
R9806:9819 graph_inst myGraph.Edges add_spec thm
R9843:9850 graph_inst myGraph IsVertex def
R9885:9887 Coq.Init.Logic <> not def
R9907:9911 Coq.Init.Logic <> False ind
R9907:9911 Coq.Init.Logic <> False ind
prf 9973:9985 myGraph addEdge_spec2
R10018:10041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10053:10057 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10042:10047 graph_inst myGraph IsEdge def
R10052:10052 graph_inst <> G var
R10049:10050 graph_inst <> e1 var
R10058:10063 graph_inst myGraph IsEdge def
R10069:10075 graph_inst myGraph addEdge def
R10080:10080 graph_inst <> G var
R10077:10078 graph_inst <> e2 var
R10065:10066 graph_inst <> e1 var
R10011:10015 graph_inst myGraph ::x_'<e>'_x not
R10009:10010 graph_inst <> e1 var
R10016:10017 graph_inst <> e2 var
R10123:10129 graph_inst myGraph addEdge def
R10147:10152 graph_inst myGraph IsEdge def
R10176:10190 graph_inst myGraph Vertices_in_dec thm
R10176:10190 graph_inst myGraph Vertices_in_dec thm
R10220:10233 graph_inst myGraph.Edges add_spec thm
R10220:10233 graph_inst myGraph.Edges add_spec thm
R10267:10276 graph_inst myGraph graphEdges proj
R10325:10339 graph_inst myGraph Vertices_in_dec thm
R10325:10339 graph_inst myGraph Vertices_in_dec thm
R10379:10384 graph_inst myGraph IsEdge def
R10420:10433 graph_inst myGraph.Edges add_spec thm
R10420:10433 graph_inst myGraph.Edges add_spec thm
R10476:10478 Coq.Init.Logic <> not def
R10498:10502 Coq.Init.Logic <> False ind
R10498:10502 Coq.Init.Logic <> False ind
prf 10569:10581 myGraph addEdge_spec3
R10617:10621 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R10605:10612 graph_inst myGraph IsVertex def
R10616:10616 graph_inst <> G var
R10614:10614 graph_inst <> v var
R10622:10629 graph_inst myGraph IsVertex def
R10635:10641 graph_inst myGraph addEdge def
R10645:10645 graph_inst <> G var
R10643:10643 graph_inst <> e var
R10631:10631 graph_inst <> v var
R10688:10695 graph_inst myGraph IsVertex def
R10698:10704 graph_inst myGraph addEdge def
R10729:10743 graph_inst myGraph Vertices_in_dec thm
R10729:10743 graph_inst myGraph Vertices_in_dec thm
R10796:10810 graph_inst myGraph Vertices_in_dec thm
R10796:10810 graph_inst myGraph Vertices_in_dec thm
prf 10845:10862 myGraph removeVertex_spec1
R10882:10883 Coq.Init.Logic <> :type_scope:'~'_x not
R10884:10891 graph_inst myGraph IsVertex def
R10896:10907 graph_inst myGraph removeVertex def
R10911:10911 graph_inst <> G var
R10909:10909 graph_inst <> v var
R10893:10893 graph_inst <> v var
R10953:10960 graph_inst myGraph IsVertex def
R10994:11013 graph_inst myGraph.Vertices remove_spec thm
R10994:11013 graph_inst myGraph.Vertices remove_spec thm
R11048:11050 Coq.Init.Logic <> not def
prf 11085:11102 myGraph removeVertex_spec2
R11135:11158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11172:11176 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11159:11166 graph_inst myGraph IsVertex def
R11171:11171 graph_inst <> G var
R11168:11169 graph_inst <> v1 var
R11177:11184 graph_inst myGraph IsVertex def
R11190:11201 graph_inst myGraph removeVertex def
R11206:11206 graph_inst <> G var
R11203:11204 graph_inst <> v2 var
R11186:11187 graph_inst <> v1 var
R11128:11132 graph_inst myGraph ::x_'<v>'_x not
R11126:11127 graph_inst <> v1 var
R11133:11134 graph_inst <> v2 var
R11282:11289 graph_inst myGraph IsVertex def
R11331:11354 graph_inst myGraph.vert_prop.Dec.F remove_2 thm
R11373:11396 graph_inst myGraph.vert_prop.Dec.F remove_3 thm
R11331:11354 graph_inst myGraph.vert_prop.Dec.F remove_2 thm
R11331:11354 graph_inst myGraph.vert_prop.Dec.F remove_2 thm
R11373:11396 graph_inst myGraph.vert_prop.Dec.F remove_3 thm
R11373:11396 graph_inst myGraph.vert_prop.Dec.F remove_3 thm
R11373:11396 graph_inst myGraph.vert_prop.Dec.F remove_3 thm
prf 11434:11451 myGraph removeVertex_spec3
R11506:11516 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R11479:11484 graph_inst myGraph IsEdge def
R11489:11500 graph_inst myGraph removeVertex def
R11504:11504 graph_inst <> G var
R11502:11502 graph_inst <> v var
R11486:11486 graph_inst <> e var
R11527:11536 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11517:11522 graph_inst myGraph IsEdge def
R11526:11526 graph_inst <> G var
R11524:11524 graph_inst <> e var
R11565:11574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11537:11537 graph_inst myGraph ::x_'<v>'_x not
R11558:11563 graph_inst myGraph ::x_'<v>'_x not
R11538:11540 Coq.Init.Datatypes <> fst def
R11543:11554 graph_inst myGraph destructEdge def
R11556:11556 graph_inst <> e var
R11564:11564 graph_inst <> v var
R11575:11575 graph_inst myGraph ::x_'<v>'_x not
R11596:11601 graph_inst myGraph ::x_'<v>'_x not
R11576:11578 Coq.Init.Datatypes <> snd def
R11581:11592 graph_inst myGraph destructEdge def
R11594:11594 graph_inst <> e var
R11602:11602 graph_inst <> v var
R11643:11648 graph_inst myGraph IsEdge def
R11704:11713 graph_inst myGraph graphEdges proj
R11769:11785 graph_inst myGraph.Edges filter_spec thm
R11769:11785 graph_inst myGraph.Edges filter_spec thm
R11820:11833 graph_inst myGraph annoyingProper thm
R11820:11833 graph_inst myGraph annoyingProper thm
R11849:11860 graph_inst myGraph destructEdge def
R11907:11918 graph_inst myGraph removeVertex def
R11956:11972 graph_inst myGraph.Edges filter_spec thm
R11956:11972 graph_inst myGraph.Edges filter_spec thm
R12010:12022 Coq.Bool.Bool <> andb_true_iff thm
R12010:12022 Coq.Bool.Bool <> andb_true_iff thm
R12082:12094 Coq.Bool.Bool <> negb_true_iff thm
R12082:12094 Coq.Bool.Bool <> negb_true_iff thm
R12082:12094 Coq.Bool.Bool <> negb_true_iff thm
R12120:12130 Coq.PArith.BinPos Pos eqb_neq thm
R12120:12130 Coq.PArith.BinPos Pos eqb_neq thm
R12120:12130 Coq.PArith.BinPos Pos eqb_neq thm
R12166:12179 graph_inst myGraph annoyingProper thm
R12166:12179 graph_inst myGraph annoyingProper thm
R12285:12301 graph_inst myGraph.Edges filter_spec thm
R12285:12301 graph_inst myGraph.Edges filter_spec thm
R12316:12329 graph_inst myGraph annoyingProper thm
R12316:12329 graph_inst myGraph annoyingProper thm
R12369:12381 Coq.Bool.Bool <> andb_true_iff thm
R12369:12381 Coq.Bool.Bool <> andb_true_iff thm
R12403:12415 Coq.Bool.Bool <> negb_true_iff thm
R12403:12415 Coq.Bool.Bool <> negb_true_iff thm
R12403:12415 Coq.Bool.Bool <> negb_true_iff thm
R12403:12415 Coq.Bool.Bool <> negb_true_iff thm
R12403:12415 Coq.Bool.Bool <> negb_true_iff thm
R12451:12461 Coq.PArith.BinPos Pos eqb_neq thm
R12451:12461 Coq.PArith.BinPos Pos eqb_neq thm
R12451:12461 Coq.PArith.BinPos Pos eqb_neq thm
R12451:12461 Coq.PArith.BinPos Pos eqb_neq thm
R12451:12461 Coq.PArith.BinPos Pos eqb_neq thm
prf 12498:12512 myGraph my_neg_iff_prop
R12594:12603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12620:12624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12615:12618 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12604:12606 Coq.Init.Datatypes <> fst def
R12608:12608 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12610:12611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12614:12614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12609:12609 graph_inst <> p var
R12612:12613 graph_inst <> p0 var
R12619:12619 graph_inst <> v var
R12636:12639 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12625:12627 Coq.Init.Datatypes <> snd def
R12629:12629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12631:12632 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12635:12635 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12630:12630 graph_inst <> p var
R12633:12634 graph_inst <> p0 var
R12640:12640 graph_inst <> v var
R12587:12589 Coq.Init.Logic <> :type_scope:x_'='_x not
R12560:12563 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R12537:12540 Coq.Init.Datatypes <> negb def
R12554:12557 Coq.PArith.BinPos <> :positive_scope:x_'=?'_x not
R12543:12545 Coq.Init.Datatypes <> fst def
R12547:12547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12549:12550 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12553:12553 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12548:12548 graph_inst <> p var
R12551:12552 graph_inst <> p0 var
R12558:12558 graph_inst <> v var
R12564:12567 Coq.Init.Datatypes <> negb def
R12581:12584 Coq.PArith.BinPos <> :positive_scope:x_'=?'_x not
R12570:12572 Coq.Init.Datatypes <> snd def
R12574:12574 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12576:12577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12580:12580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12575:12575 graph_inst <> p var
R12578:12579 graph_inst <> p0 var
R12585:12585 graph_inst <> v var
R12590:12593 Coq.Init.Datatypes <> true constr
R12691:12703 Coq.Bool.Bool <> andb_true_iff thm
R12691:12703 Coq.Bool.Bool <> andb_true_iff thm
R12739:12751 Coq.Bool.Bool <> negb_true_iff thm
R12739:12751 Coq.Bool.Bool <> negb_true_iff thm
R12739:12751 Coq.Bool.Bool <> negb_true_iff thm
R12775:12785 Coq.PArith.BinPos Pos eqb_neq thm
R12775:12785 Coq.PArith.BinPos Pos eqb_neq thm
R12775:12785 Coq.PArith.BinPos Pos eqb_neq thm
prf 12823:12840 myGraph removeVertex_spec4
R12878:12887 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12954:12963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12964:12965 Coq.Init.Logic <> :type_scope:'~'_x not
R12966:12971 graph_inst myGraph IsEdge def
R12976:12987 graph_inst myGraph removeVertex def
R12991:12991 graph_inst <> G var
R12989:12989 graph_inst <> v var
R12973:12973 graph_inst <> e var
R12888:12888 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12915:12926 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12953:12953 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R12909:12913 graph_inst myGraph ::x_'=v='_x not
R12889:12891 Coq.Init.Datatypes <> fst def
R12894:12905 graph_inst myGraph destructEdge def
R12907:12907 graph_inst <> e var
R12914:12914 graph_inst <> v var
R12947:12951 graph_inst myGraph ::x_'=v='_x not
R12927:12929 Coq.Init.Datatypes <> snd def
R12932:12943 graph_inst myGraph destructEdge def
R12945:12945 graph_inst <> e var
R12952:12952 graph_inst <> v var
R12868:12873 graph_inst myGraph IsEdge def
R12877:12877 graph_inst <> G var
R12875:12875 graph_inst <> e var
R13085:13090 graph_inst myGraph IsEdge def
R13111:13127 graph_inst myGraph.Edges filter_spec thm
R13111:13127 graph_inst myGraph.Edges filter_spec thm
R13167:13179 Coq.Bool.Bool <> andb_true_iff thm
R13167:13179 Coq.Bool.Bool <> andb_true_iff thm
R13205:13217 Coq.Bool.Bool <> negb_true_iff thm
R13205:13217 Coq.Bool.Bool <> negb_true_iff thm
R13205:13217 Coq.Bool.Bool <> negb_true_iff thm
R13205:13217 Coq.Bool.Bool <> negb_true_iff thm
R13205:13217 Coq.Bool.Bool <> negb_true_iff thm
R13255:13265 Coq.PArith.BinPos Pos eqb_neq thm
R13255:13265 Coq.PArith.BinPos Pos eqb_neq thm
R13255:13265 Coq.PArith.BinPos Pos eqb_neq thm
R13297:13310 graph_inst myGraph annoyingProper thm
R13297:13310 graph_inst myGraph annoyingProper thm
R13323:13339 graph_inst myGraph.Edges filter_spec thm
R13323:13339 graph_inst myGraph.Edges filter_spec thm
R13379:13391 Coq.Bool.Bool <> andb_true_iff thm
R13379:13391 Coq.Bool.Bool <> andb_true_iff thm
R13417:13429 Coq.Bool.Bool <> negb_true_iff thm
R13417:13429 Coq.Bool.Bool <> negb_true_iff thm
R13417:13429 Coq.Bool.Bool <> negb_true_iff thm
R13417:13429 Coq.Bool.Bool <> negb_true_iff thm
R13417:13429 Coq.Bool.Bool <> negb_true_iff thm
R13467:13477 Coq.PArith.BinPos Pos eqb_neq thm
R13467:13477 Coq.PArith.BinPos Pos eqb_neq thm
R13467:13477 Coq.PArith.BinPos Pos eqb_neq thm
R13509:13522 graph_inst myGraph annoyingProper thm
R13509:13522 graph_inst myGraph annoyingProper thm
prf 13541:13556 myGraph removeEdge_spec1
R13576:13577 Coq.Init.Logic <> :type_scope:'~'_x not
R13578:13583 graph_inst myGraph IsEdge def
R13588:13597 graph_inst myGraph removeEdge def
R13601:13601 graph_inst <> G var
R13599:13599 graph_inst <> e var
R13585:13585 graph_inst <> e var
R13646:13651 graph_inst myGraph IsEdge def
R13691:13714 graph_inst myGraph.edge_prop.Dec.F remove_1 thm
R13691:13714 graph_inst myGraph.edge_prop.Dec.F remove_1 thm
prf 13770:13785 myGraph removeEdge_spec2
R13818:13842 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13854:13858 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13843:13848 graph_inst myGraph IsEdge def
R13853:13853 graph_inst <> G var
R13850:13851 graph_inst <> e1 var
R13859:13864 graph_inst myGraph IsEdge def
R13870:13879 graph_inst myGraph removeEdge def
R13884:13884 graph_inst <> G var
R13881:13882 graph_inst <> e2 var
R13866:13867 graph_inst <> e1 var
R13811:13815 graph_inst myGraph ::x_'<e>'_x not
R13809:13810 graph_inst <> e1 var
R13816:13817 graph_inst <> e2 var
R13930:13935 graph_inst myGraph IsEdge def
R13987:14010 graph_inst myGraph.edge_prop.Dec.F remove_2 thm
R13987:14010 graph_inst myGraph.edge_prop.Dec.F remove_2 thm
R14060:14062 Coq.Init.Logic <> not def
R14127:14136 graph_inst myGraph graphEdges proj
R14203:14219 graph_inst myGraph.Edges remove_spec thm
R14203:14219 graph_inst myGraph.Edges remove_spec thm
prf 14270:14285 myGraph removeEdge_spec3
R14325:14329 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14313:14320 graph_inst myGraph IsVertex def
R14324:14324 graph_inst <> G var
R14322:14322 graph_inst <> v var
R14330:14337 graph_inst myGraph IsVertex def
R14342:14351 graph_inst myGraph removeEdge def
R14355:14355 graph_inst <> G var
R14353:14353 graph_inst <> e var
R14339:14339 graph_inst <> v var
def 14406:14406 myGraph g
R14411:14417 graph_inst myGraph addEdge def
R14426:14434 graph_inst myGraph addVertex def
R14439:14447 graph_inst myGraph addVertex def
R14451:14455 graph_inst myGraph empty def
R14419:14419 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14421:14421 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14423:14423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14470:14478 graph_inst myGraph enumEdges def
R14480:14480 graph_inst myGraph g def
def 14499:14504 myGraph graph1
R14511:14517 graph_inst myGraph addEdge def
R14526:14532 graph_inst myGraph addEdge def
R14541:14549 graph_inst myGraph addVertex def
R14554:14562 graph_inst myGraph addVertex def
R14567:14575 graph_inst myGraph addVertex def
R14580:14588 graph_inst myGraph addVertex def
R14593:14601 graph_inst myGraph addVertex def
R14605:14609 graph_inst myGraph empty def
R14534:14534 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14536:14536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14538:14538 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14519:14519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14521:14521 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14523:14523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 14635:14640 myGraph graph2
R14647:14653 graph_inst myGraph addEdge def
R14662:14668 graph_inst myGraph addEdge def
R14677:14685 graph_inst myGraph addVertex def
R14690:14698 graph_inst myGraph addVertex def
R14703:14711 graph_inst myGraph addVertex def
R14716:14724 graph_inst myGraph addVertex def
R14729:14737 graph_inst myGraph addVertex def
R14741:14745 graph_inst myGraph empty def
R14670:14670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14672:14672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14674:14674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14655:14655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14657:14657 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14659:14659 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 14769:14780 myGraph neighborhood
R14787:14792 graph_inst myGraph vertex syndef
R14800:14800 graph_inst myGraph t def
R14804:14813 graph_inst myGraph.Vertices t def
R14822:14831 graph_inst myGraph.Edges fold def
R14961:14974 graph_inst myGraph.Vertices empty def
R14948:14956 graph_inst myGraph enumEdges def
R14958:14958 graph_inst <> G var
R14869:14875 Coq.PArith.BinPos Pos eqb def
R14888:14888 graph_inst <> v var
R14878:14880 Coq.Init.Datatypes <> fst def
R14882:14885 graph_inst <> edge var
R14944:14944 graph_inst <> e var
R14895:14906 graph_inst myGraph.Vertices add def
R14919:14919 graph_inst <> e var
R14909:14911 Coq.Init.Datatypes <> snd def
R14913:14916 graph_inst <> edge var
def 14990:14993 myGraph test
R14998:15000 Coq.Lists.List <> map def
R15016:15032 graph_inst myGraph.Vertices elements def
R15035:15046 graph_inst myGraph neighborhood def
R15050:15055 graph_inst myGraph graph2 def
R15002:15013 Coq.Strings.Ascii <> ascii_of_pos def
R15077:15080 Coq.Lists.List <> <> lib
def 15100:15113 myGraph graph_contains
R15120:15125 graph_inst myGraph vertex syndef
R15133:15133 graph_inst myGraph t def
R15138:15141 Coq.Init.Datatypes <> bool ind
R15150:15161 graph_inst myGraph.Vertices mem def
R15166:15178 graph_inst myGraph graphVertices proj
R15180:15180 graph_inst <> g var
R15163:15163 graph_inst <> x var
def 15198:15211 myGraph graph_Contains
R15218:15223 graph_inst myGraph vertex syndef
R15231:15231 graph_inst myGraph t def
R15248:15258 graph_inst myGraph.Vertices In def
R15263:15275 graph_inst myGraph graphVertices proj
R15277:15277 graph_inst <> g var
R15260:15260 graph_inst <> x var
prf 15293:15307 myGraph graph_containsP
R15329:15335 Coq.Bool.Bool <> reflect ind
R15359:15372 graph_inst myGraph graph_contains def
R15376:15376 graph_inst <> g var
R15374:15374 graph_inst <> x var
R15338:15351 graph_inst myGraph graph_Contains def
R15355:15355 graph_inst <> g var
R15353:15353 graph_inst <> x var
R15411:15421 Coq.Bool.Bool <> iff_reflect thm
R15411:15421 Coq.Bool.Bool <> iff_reflect thm
R15435:15448 graph_inst myGraph graph_Contains def
R15451:15464 graph_inst myGraph graph_contains def
R15494:15510 graph_inst myGraph.Vertices mem_spec thm
R15494:15510 graph_inst myGraph.Vertices mem_spec thm
R15494:15510 graph_inst myGraph.Vertices mem_spec thm
def 15540:15549 myGraph isNeighbor
R15558:15563 graph_inst myGraph vertex syndef
R15571:15571 graph_inst myGraph t def
R15588:15595 graph_inst myGraph.Edges In def
R15604:15613 graph_inst myGraph graphEdges proj
R15615:15615 graph_inst <> g var
R15597:15597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15599:15599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15601:15601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15598:15598 graph_inst <> x var
R15600:15600 graph_inst <> y var
ind 15634:15637 myGraph path
constr 15690:15694 myGraph start
constr 15754:15757 myGraph step
R15644:15644 graph_inst myGraph t def
R15653:15656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15661:15664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15674:15677 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15665:15668 Coq.Init.Datatypes <> list ind
R15670:15673 graph_inst myGraph node def
R15657:15660 graph_inst myGraph node def
R15649:15652 graph_inst myGraph node def
R15726:15729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15730:15733 graph_inst <> path ind
R15743:15744 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15742:15742 graph_inst <> x var
R15745:15747 Coq.Init.Datatypes <> nil constr
R15739:15739 graph_inst <> x var
R15737:15737 graph_inst <> x var
R15708:15721 graph_inst myGraph graph_Contains def
R15723:15723 graph_inst <> x var
R15802:15811 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15829:15838 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15855:15864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15865:15868 graph_inst <> path ind
R15878:15879 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15877:15877 graph_inst <> x var
R15881:15882 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15880:15880 graph_inst <> y var
R15883:15883 graph_inst <> l var
R15874:15874 graph_inst <> z var
R15872:15872 graph_inst <> x var
R15839:15848 graph_inst myGraph isNeighbor def
R15852:15852 graph_inst <> y var
R15850:15850 graph_inst <> x var
R15812:15815 graph_inst <> path ind
R15825:15826 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R15824:15824 graph_inst <> y var
R15827:15827 graph_inst <> l var
R15821:15821 graph_inst <> z var
R15819:15819 graph_inst <> y var
R15784:15797 graph_inst myGraph graph_Contains def
R15799:15799 graph_inst <> x var
ind 15903:15910 myGraph distance
constr 15926:15928 myGraph INF
constr 15946:15948 myGraph num
R15932:15939 graph_inst <> distance ind
R15955:15958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15959:15966 graph_inst <> distance ind
R15952:15954 Coq.Init.Datatypes <> nat ind
R15974:15980 graph_inst myGraph <> mod
R16044:16047 Coq.Init.Datatypes <> bool ind
R16100:16103 Coq.Init.Datatypes <> bool ind
R16154:16157 Coq.Init.Datatypes <> list ind
